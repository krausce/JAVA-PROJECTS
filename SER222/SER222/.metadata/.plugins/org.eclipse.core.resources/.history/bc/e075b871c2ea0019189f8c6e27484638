import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Stack;

/**
 * @author chris
 *
 */
public class IntuitiveTopological implements TopologicalSort {
	
	private BetterDiGraph diGraph;

	public IntuitiveTopological(BetterDiGraph diGraph) {
		this.diGraph = diGraph;
	}

	@Override
	public Iterable<Integer> order() {
		
	}

	@Override
	public boolean isDAG() {
		return !isCyclic();
	}

	private boolean isCyclic() {
		// Map indicating if a node is visited (has been processed by the algorithm)
	    Map<Integer, Boolean> visited = new HashMap<>();
	    for (Integer v: this.diGraph.vertices())
	        visited.put(v, false);
	    
	    for(Integer v: visited.keySet()) {
	    	if(!visited.get(v)) {
	    		
	    	}
	    }
		
		return false;
	}

}
